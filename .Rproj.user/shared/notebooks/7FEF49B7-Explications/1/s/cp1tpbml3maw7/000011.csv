"0","# getSymbols BTC-USD into df  "
"0","df <- getSymbols(Symbols = ""BTC-USD"", auto.assign = FALSE, from=as.Date(""2020-01-01""), to=as.Date(""2023-01-01""))"
"0",""
"0","# fonction créant les trades"
"0","trades <- function(df, O=20, C=10, A=14) {"
"0","  # Système 1 : 20jours, 10jours"
"0","  # Système 2 : 55jours, 20jours"
"0","  # Create TA"
"0","  dcO <- DonchianChannel(HL(df), n=O)"
"0","  dcC <- DonchianChannel(HL(df), n=C)"
"0","  atr <- ATR(HLC(df), n=A)$atr"
"0","  "
"0","  # Create signal data.frame"
"0","  signal <- data.frame(  "
"0","    (Hi(df) >= dcO$high),  "
"0","    (Lo(df) <= dcO$low),  "
"0","    (Lo(df) <= dcC$low),"
"0","    (Hi(df) >= dcC$high)"
"0","  )"
"0","  colnames(signal) <- c(""buyO"", ""sellO"", ""buyC"", ""sellC"")"
"0","  tail(signal)"
"0","  n <- nrow(signal)"
"0","  "
"0","  # Initialize result data.frame of positions"
"0","  result = data.frame(matrix(nrow = n, ncol = 8)) "
"0","  colnames(result) <- c(""bRISK"", ""bEARN"", ""bDATE"", ""bDURA"", ""sRISK"", ""sEARN"", ""sDATE"", ""sDURA"")"
"0","  rownames(result) <- rownames(signal)"
"0","  "
"0","  # Get profit if price1 < price2 and is a buy it is profitable"
"0","  getProfit = function(i1, i2, buy=TRUE, HL=TRUE) {"
"0","    price1 <- as.double(Cl(df[i1]))"
"0","    price2 <- as.double(Cl(df[i2]))"
"0","    if (buy) {"
"0","      if (HL) {"
"0","        price1 <- as.double(Hi(df[i1]))"
"0","        price2 <- as.double(Lo(df[i2]))"
"0","      }"
"0","      return (price2/price1)"
"0","    } else {"
"0","      if (HL) {"
"0","        price1 <- as.double(Lo(df[i1]))"
"0","        price2 <- as.double(Hi(df[i2]))"
"0","      }"
"0","      return (price1/price2)"
"0","    }"
"0","  }"
"0","  "
"0","  # Get risk"
"0","  getRisk = function(i, buy=TRUE) {"
"0","    if (buy) {"
"0","      PRICE_val = Cl(df[i])"
"0","      SL_val = dcC$low[i]"
"0","      ATR_val = atr[i]"
"0","      return ((PRICE_val-SL_val)/ATR_val)"
"0","    } else {"
"0","      PRICE_val = Cl(df[i])"
"0","      SL_val = dcC$high[i]"
"0","      ATR_val = atr[i]"
"0","      return ((SL_val-PRICE_val)/ATR_val)"
"0","    }"
"0","  }"
"0","  "
"0","  # Filling result"
"0","  bDATE <- NA"
"0","  sDATE <- NA"
"0","  for (i in n:(O+1)) {"
"0","    if (!is.na(bDATE) && signal$buyO[i]) {"
"0","      result[i, ""bDATE""] <- bDATE"
"0","      result[i, ""bDURA""] <- bDATE-i"
"0","      result[i, ""bEARN""] <- getProfit(i, bDATE, buy=TRUE)"
"0","      result[i, ""bRISK""] <- getRisk(i, buy=TRUE)"
"0","    } "
"0","    if (!is.na(sDATE) && signal$sellO[i]) {"
"0","      result[i, ""sDATE""] <- sDATE"
"0","      result[i, ""sDURA""] <- sDATE-i"
"0","      result[i, ""sEARN""] <- getProfit(i, sDATE, buy=FALSE)"
"0","      result[i, ""sRISK""] <- getRisk(i, buy=FALSE)"
"0","    } "
"0","    if (signal$buyC[i]) {"
"0","      bDATE <- i"
"0","    }"
"0","    if (signal$sellC[i]) {"
"0","      sDATE <- i"
"0","    }"
"0","  }"
"0","  return (result)"
"0","}"
"0","result <- df %>% "
"0","  trades(O=55, C=20, A=14)"
"0",""
"0","# COUNT"
"0","result %>% "
"0","  filter(!is.na(bEARN)) %>% "
"0","  count() %>% "
"0","  as.double() %>% "
"0","  paste(""Au total"", ., ""BUY"") %>% "
"0","  print()"
"1","[1]"
"1"," ""Au total 94 BUY"""
"1","
"
"0","result %>% "
"0","  filter(!is.na(bEARN)) %>% "
"0","  select(bDATE) %>% "
"0","  n_distinct() %>% "
"0","  as.double() %>% "
"0","  paste(""Au total"", ., ""BUY distinct"") %>% "
"0","  print()"
"1","[1]"
"1"," ""Au total 9 BUY distinct"""
"1","
"
"0","result %>% "
"0","  filter(!is.na(sEARN)) %>% "
"0","  count() %>% "
"0","  as.double() %>% "
"0","  paste(""Au total"", ., ""SELL"") %>% "
"0","  print()"
"1","[1]"
"1"," ""Au total 42 SELL"""
"1","
"
"0","result %>% "
"0","  filter(!is.na(sEARN)) %>% "
"0","  select(sDATE) %>% "
"0","  n_distinct() %>% "
"0","  as.double() %>% "
"0","  paste(""Au total"", ., ""SELL distinct"") %>% "
"0","  print()"
"1","[1]"
"1"," ""Au total 10 SELL distinct"""
"1","
"
